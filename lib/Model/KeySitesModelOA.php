<?php
/**
 * KeySitesModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SiapepFranceAskimet\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Akismet API
 *
 * Documentation of the Akismet API
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SiapepFranceAskimet\Client\Model;

use OpenApi\Annotations as OA;

/**
 * KeySitesModel 
 *
 * @category Class
 * @package  SiapepFranceAskimet\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \JsonSerializable
 *
 * @OA\Schema(
 * )
 */
class KeySitesModelOA implements \JsonSerializable
{
    public const FORMAT_JSON = 'json';
    public const FORMAT_CSV = 'csv';
    public const ORDER_TOTAL = 'total';
    public const ORDER_SPAM = 'spam';
    public const ORDER_HAM = 'ham';
    public const ORDER_MISSED_SPAM = 'missed_spam';
    public const ORDER_FALSE_POSITIVES = 'false_positives';

    /**
      * @var string
      * @OA\Property(
      *    type="string",
      * )
      */
    private $api_key;

    /**
      * @var string
      * @OA\Property(
      *    type="string",
      * )
      */
    private $month;

    /**
      * @var string
      * @OA\Property(
      *    type="string",
      *    enum={ self::FORMAT_JSON, self::FORMAT_CSV },
      * )
      */
    private $format;

    /**
      * @var string
      * @OA\Property(
      *    type="string",
      *    enum={ self::ORDER_TOTAL, self::ORDER_SPAM, self::ORDER_HAM, self::ORDER_MISSED_SPAM, self::ORDER_FALSE_POSITIVES },
      * )
      */
    private $order;

    /**
      * @var int
      * @OA\Property(
      *    type="int",
      * )
      */
    private $limit;

    /**
      * @var int
      * @OA\Property(
      *    type="int",
      * )
      */
    private $offset;

    /**
     * @return string
     */
    public function getApiKey()
    {
        return $this->api_key;
    }

    /**
     * @param string $api_key api_key
     *
     * @return self
     */
    public function setApiKey($api_key)
    {
        $this->api_key = $api_key;

        return $this;
    }

    /**
     * @return string
     */
    public function getMonth()
    {
        return $this->month;
    }

    /**
     * @param string $month month
     *
     * @return self
     */
    public function setMonth($month)
    {
        $this->month = $month;

        return $this;
    }

    /**
     * @return string
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * @param string $format format
     *
     * @return self
     */
    public function setFormat($format)
    {
        $this->format = $format;

        return $this;
    }

    /**
     * @return string
     */
    public function getOrder()
    {
        return $this->order;
    }

    /**
     * @param string $order order
     *
     * @return self
     */
    public function setOrder($order)
    {
        $this->order = $order;

        return $this;
    }

    /**
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * @param int $limit limit
     *
     * @return self
     */
    public function setLimit($limit)
    {
        $this->limit = $limit;

        return $this;
    }

    /**
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * @param int $offset offset
     *
     * @return self
     */
    public function setOffset($offset)
    {
        $this->offset = $offset;

        return $this;
    }

    /**
     * @return array
     */
    public function jsonSerialize()
    {
        return [
            "api_key" => $this->api_key,
            "month" => $this->month,
            "format" => $this->format,
            "order" => $this->order,
            "limit" => $this->limit,
            "offset" => $this->offset,
        ];
    }
}
